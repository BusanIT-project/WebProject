/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.51
 * Generated at: 2020-05-06 09:13:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Movie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Movie.Dao;

public final class memberJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Movie.Dao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      Movie.UserDTO user = null;
      user = (Movie.UserDTO) _jspx_page_context.getAttribute("user", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (user == null){
        user = new Movie.UserDTO();
        _jspx_page_context.setAttribute("user", user, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userID", request.getParameter("userID"), request, "userID", false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userPW", request.getParameter("userPW"), request, "userPW", false);
      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");

	String userID = null;
	if (session.getAttribute("userID") != null) {
		userID = (String) session.getAttribute("userID");
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("table {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tpadding: 20px;\r\n");
      out.write("\twidth: 300px;\r\n");
      out.write("\tbackground-color: #EEEFF1;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\ttop: 50%;\r\n");
      out.write("\tleft: 50%;\r\n");
      out.write("\ttransform: translate(-50%, -50%);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<form id=\"fm\" onsubmit=\"return check(this);\"\r\n");
      out.write("\t\taction=\"memberJoinAction.jsp\" method=\"post\">\r\n");
      out.write("\t\t<table border=\"1\">\r\n");
      out.write("\t\t\t<h1 style=\"text-align: center; margin-top: 190px;\">회원가입</h1>\r\n");
      out.write("\t\t\t<th colspan=\"2\" align=\"center\" bgcolor=\"darkgray\" spanstyle=\"color: white\">회원 기본 정보</th>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\">ID</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"userID\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\">PW</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"password\" name=\"userPW\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\">PW확인</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"password\" placeholder=\"영어+특수문자+숫자를 섞어서 (8~16)자리\" name=\"correctPassword\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\">이름</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"userName\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\">이메일</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"email\" name=\"email\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\">연락처</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"phone\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<td colspan=\"2\" align=\"center\"><input type=\"submit\"\r\n");
      out.write("\t\t\t\t\tname=\"join-button\" value=\"회원가입\"> <input type=\"button\"\r\n");
      out.write("\t\t\t\t\tvalue=\"검사\" onclick=\"check()\"> <input type=\"button\"\r\n");
      out.write("\t\t\t\t\tvalue=\"초기화\" onclick=\"inputClear()\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t");

		if (userID != null) {
	
      out.write("\r\n");
      out.write("\t<div class=\"logout\">\r\n");
      out.write("\t\t<h1>로그아웃 하시겠습니까?</h1>\r\n");
      out.write("\t\t<form action=\"logoutAction.jsp\" method=\"get\">\r\n");
      out.write("\t\t\t<input type=\"submit\" name=\"logout-button\" value=\"로그아웃\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");

		} else {
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t기존의 계정이 있으시다면?\r\n");
      out.write("\t\t<form action=\"login.jsp\" method=\"get\">\r\n");
      out.write("\t\t\t<input type=\"submit\" name=\"login-button\" value=\"로그인 하러가기\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\tvar text =\"\";\r\n");
      out.write("\tvar count = 0;\r\n");
      out.write("\t\r\n");
      out.write("\tfunction print() {\r\n");
      out.write("\t    alert(\"asdf\")\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction inputClear() {\r\n");
      out.write("\t\tdocument.getElementById(\"fm\").reset();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction check() {\r\n");
      out.write("\t\tcount ++;\r\n");
      out.write("\t\t//dom객체 찾기\r\n");
      out.write("\t\tvar userID = document.getElementsByName(\"userID\");\r\n");
      out.write("\t\tvar userPW = document.getElementsByName(\"userPW\");\r\n");
      out.write("\t\tvar correctPassword = document.getElementsByName(\"correctPassword\");\r\n");
      out.write("\t\tvar userName = document.getElementsByName(\"userName\");\r\n");
      out.write("\t\tvar email = document.getElementsByName(\"email\");\r\n");
      out.write("\t\tvar phone = document.getElementsByName(\"phone\");\r\n");
      out.write("\r\n");
      out.write("\t\t//정규표현식\r\n");
      out.write("\t\tvar idPattern = /^[a-zA-Z0-9]{4,12}$/;\r\n");
      out.write("\t\tvar pwPattern = /^[a-zA-Z0-9]{4,12}$/;\r\n");
      out.write("\t\tvar emailPattern = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/;\r\n");
      out.write("\t\tvar phonePattern = /(^02.{0}|^01.{1}|[0-9]{3})([0-9]+)([0-9]{4})/g;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//아이디 유효성 검사\r\n");
      out.write("\t\tif (idPattern.test(userID[0].value) == true) {\r\n");
      out.write("\t\t\ttext += \"ID : \" + userID[0].value + \"\\n\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t} else { \r\n");
      out.write("\t\t\talert(\"아이디를 잘못 입력 하셨습니다.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//비밀번호 유효성 검사\r\n");
      out.write("\t\tif(pwPattern.test(userPW[0].value) == true){\r\n");
      out.write("\t        if(pwPattern.test(correctPassword[0].value) == true){\r\n");
      out.write("\t          if(userPW[0].value == correctPassword[0].value){\r\n");
      out.write("\t            text += \"PW : \" + userPW[0].value + \"\\n\";\r\n");
      out.write("\t          }\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t}\r\n");
      out.write("\t        else {\r\n");
      out.write("\t        \talert(\"패스워드가 일치 하지 않습니다.\");\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//이메일 유효성 검사\r\n");
      out.write("\t\tif (emailPattern.test(email[0].value) == true) {\r\n");
      out.write("\t\t\ttext += \"EMAIL : \" + email[0].value + \"\\n\";\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\talert(\"이메일을 잘못 입력 하셨습니다.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//폰번호 유효성 검사\r\n");
      out.write("\t\tif (phonePattern.test(phone[0].value) == true) {\r\n");
      out.write("\t\t\ttext += \"EMAIL : \" + phone[0].value + \"\\n\";\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\talert(\"폰번호 형식이 잘못 되었습니다.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\talert(text);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(count == 0+count)\r\n");
      out.write("\t        text = [];\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
